[{"/Users/prernasingh/Desktop/covid-tracker/src/index.js":"1","/Users/prernasingh/Desktop/covid-tracker/src/App.js":"2","/Users/prernasingh/Desktop/covid-tracker/src/components/index.js":"3","/Users/prernasingh/Desktop/covid-tracker/src/components/Cards/Cards.jsx":"4","/Users/prernasingh/Desktop/covid-tracker/src/components/Chart/Chart.jsx":"5","/Users/prernasingh/Desktop/covid-tracker/src/components/CountryPicker/CountryPicker.jsx":"6","/Users/prernasingh/Desktop/covid-tracker/src/api/index.js":"7"},{"size":146,"mtime":1612000465658,"results":"8","hashOfConfig":"9"},{"size":1385,"mtime":1612426134072,"results":"10","hashOfConfig":"9"},{"size":171,"mtime":1612001494170,"results":"11","hashOfConfig":"9"},{"size":4279,"mtime":1612203818915,"results":"12","hashOfConfig":"9"},{"size":2047,"mtime":1612423684394,"results":"13","hashOfConfig":"9"},{"size":1006,"mtime":1612380573168,"results":"14","hashOfConfig":"9"},{"size":1149,"mtime":1612423183174,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"6a7gks",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/prernasingh/Desktop/covid-tracker/src/index.js",[],["33","34"],"/Users/prernasingh/Desktop/covid-tracker/src/App.js",[],"/Users/prernasingh/Desktop/covid-tracker/src/components/index.js",[],"/Users/prernasingh/Desktop/covid-tracker/src/components/Cards/Cards.jsx",[],"/Users/prernasingh/Desktop/covid-tracker/src/components/Chart/Chart.jsx",["35"],"import { useEffect, useState } from \"react\";\nimport React from 'react';\nimport {fetchDailyData} from '../../api/index';\nimport {Line,Bar} from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n    const [dailyData,setDailyData]=useState([])\n    // state={\n    //     dailyData:{},\n       useEffect(()=>{\n           const fetchApi=async()=>{\n            const fetchedDailyData = await fetchDailyData();\n\n            setDailyData(fetchedDailyData);\n               \n           }\n           console.log(dailyData);\n           fetchApi();\n\n\n       },[setDailyData]);\n\n       const barChart = (\n        confirmed ? (\n          <Bar\n            data={{\n              labels: ['Infected', 'Recovered', 'Deaths'],\n              datasets: [\n                {\n                  label: 'People',\n                  backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n                  data: [confirmed.value, recovered.value, deaths.value],\n                },\n              ],\n            }}\n            options={{\n              legend: { display: false },\n              title: { display: true, text: `Current state in ${country}` },\n            }}\n          />\n        ) : null\n      );\n\n\n\n       const lineChart=(\n        (dailyData.length)?(<Line\n           data={{\n               labels:dailyData.map(({date})=>date),\n               datasets:[{\n                data:dailyData.map(({confirmed})=>confirmed),\n                label:'infected',\n                borderColor:'#3333ff',\n                fill:'true'\n\n               },{\n\n                data:dailyData.map(({deaths})=>deaths),\n                label:'deaths',\n                borderColor:'red',\n                backgroundColor:'rgba(255,0,0,0.5)',\n                fill:'true'\n\n               }],\n            }}/>):null\n       )\n\n    return (\n        <div className={styles.container}>\n          {country ? barChart : lineChart}\n        </div>\n\n    )\n}\n\n\nexport default Chart;\n","/Users/prernasingh/Desktop/covid-tracker/src/components/CountryPicker/CountryPicker.jsx",["36"],"import React,{useState,useEffect} from 'react';\nimport {NativeSelect,FormControl} from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport {fetchCountries} from '../../api';\nconst CountryPicker=({handleCountryChange})=>{\n    const [fetchedCountries,setFetchedCountries]=useState([]);\n\n    useEffect(()=>{\n           const fetchAPI= async () => {\n                  setFetchedCountries(await fetchCountries());\n                  console.log(fetchedCountries);\n           }\n           fetchAPI();\n    },[setFetchedCountries]);\n    console.log(fetchedCountries);\n\n\n    return (\n       <FormControl className={styles.formControl}>\n           <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\n              \n               <option value=\"global\">Global</option>\n\n            { fetchedCountries.map((country,i)=><option key={i} value={country}>{country}</option>)}\n           </NativeSelect>\n       </FormControl>\n\n    )\n}\n\n\nexport default CountryPicker;\n","/Users/prernasingh/Desktop/covid-tracker/src/api/index.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":22,"column":10,"nodeType":"43","endLine":22,"endColumn":24,"suggestions":"44"},{"ruleId":"41","severity":1,"message":"45","line":14,"column":7,"nodeType":"43","endLine":14,"endColumn":28,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dailyData'. Either include it or remove the dependency array.","ArrayExpression",["49"],"React Hook useEffect has a missing dependency: 'fetchedCountries'. Either include it or remove the dependency array.",["50"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},{"desc":"53","fix":"54"},"Update the dependencies array to be: [dailyData, setDailyData]",{"range":"55","text":"56"},"Update the dependencies array to be: [fetchedCountries, setFetchedCountries]",{"range":"57","text":"58"},[629,643],"[dailyData, setDailyData]",[525,546],"[fetchedCountries, setFetchedCountries]"]